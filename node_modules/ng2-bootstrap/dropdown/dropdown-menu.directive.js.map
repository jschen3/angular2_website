{"version":3,"file":"dropdown-menu.directive.js","sourceRoot":"","sources":["../../src/dropdown/dropdown-menu.directive.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,EAAU,MAAM,eAAe;OAEzE,EAAE,iBAAiB,EAAE,MAAM,sBAAsB;AAGxD;IAOE,sCAAsC;IAEtC,+BAAoB,QAA0B,EAAE,EAAa;QAL7D,uCAAuC;QAEhC,aAAQ,GAAW,IAAI,CAAC;QAI7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACf,CAAC;IAEM,wCAAQ,GAAf;QACE,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC;IACpC,CAAC;IACI,gCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,kBAAkB;iBAC7B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,oCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;QACzD,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAH6F,CAG7F,CAAC;IACK,oCAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,qBAAqB,EAAG,EAAE,EAAE;KACpE,CAAC;IACF,4BAAC;AAAD,CAAC,AA/BD,IA+BC","sourcesContent":["import { Directive, ElementRef, Host, HostBinding, OnInit } from '@angular/core';\n\nimport { DropdownDirective } from './dropdown.directive';\n\n\nexport class DropdownMenuDirective implements OnInit {\n  public dropdown:DropdownDirective;\n  public el:ElementRef;\n\n  /* tslint:disable:no-unused-variable */\n  \n  public addClass:boolean = true;\n  /* tslint:enable:no-unused-variable */\n\n  public constructor( dropdown:DropdownDirective, el:ElementRef) {\n    this.dropdown = dropdown;\n    this.el = el;\n  }\n\n  public ngOnInit():void {\n    this.dropdown.dropDownMenu = this;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dropdownMenu]',\n  exportAs: 'bs-dropdown-menu'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownDirective, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'addClass': [{ type: HostBinding, args: ['class.dropdown-menu', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}