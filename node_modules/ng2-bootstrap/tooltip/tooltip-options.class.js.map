{"version":3,"file":"tooltip-options.class.js","sourceRoot":"","sources":["../../src/tooltip/tooltip-options.class.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAC1C,kBAAkB;AAElB;IAWE,wBAAmB,OAAc;QAC/B,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC/B,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,GAAG;KACf,EAF6F,CAE7F,CAAC;IACF,qBAAC;AAAD,CAAC,AArBD,IAqBC","sourcesContent":["import { Injectable } from '@angular/core';\n/** @deprecated */\n\nexport class TooltipOptions {\n  public placement:string;\n  public popupClass:string;\n  public animation:boolean;\n  public appendToBody:boolean;\n  public isOpen:boolean;\n  public content:string;\n  public htmlContent:any;\n  public context:any;\n  public trigger: string[]|string;\n\n  public constructor(options:Object) {\n    Object.assign(this, options);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Object, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}